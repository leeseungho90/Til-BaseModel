entities:
    person:
        fields:
        # personnal intrinseq
            - agem:   int
            - age:    {type: int, initialdata: false}  
            - sexe:   int
            - wprm_init: {type: int, initialdata: false}  
            
        # l_men
            - men:    int  # il faudra changer les men en men
            - quimen: int
            
        # foyer l_foy 
            - foy:      int
            - quifoy:   int
            
        # family
            - pere:   int
            - mere:   int
            - conj: int
            - tuteur: int
            - dur_in_couple: {type: float, initialdata: false}
            - dur_out_couple: {type: int, initialdata: false}
            - civilstate: {type: int, initialdata: false}

        # education    
            - education_level: {type: int, initialdata: false, default: 10}
            - findet: int 
            # 1: in work, 2: unemployed including old-age unemployed,
            # 3: in education, 4: retired, 5: other inactive
            
        # work
            - workstate: int
            - sali:  {type: float, default: 0.0}
            - productivity: {type: float, initialdata: false}
            - rsti: float
            - tauxprime: float
            - start_retirement: {type: int, initialdata: false}
            - choi: float
            - xpr: int # name to avoid confusion with function exp
            - anc: int
            - dur_rest_ARE: {type: int, initialdata: false}
            #
            - private_age_50m: {type: int, initialdata: false, default: 0}
            - private_age2_50m: {type: int, initialdata: false, default: 0}
            - private_exper_50m: {type: int, initialdata: false, default: 0}  
            - private_exper2_50m: {type: int, initialdata: false, default: 0}
            - private_chomage5_50m: {type: int, initialdata: false, default: 0}
            - private_inactive5_50m: {type: int, initialdata: false, default: 0}
            - private_invalide5_50m: {type: int, initialdata: false, default: 0}
            - private_cons: {type: int, initialdata: false, default: 0}
            # Question!! ainsi de suite, Ã§a marche?
            - public_age_50m: {type: int, initialdata: false, default: 0}
            - public_age2_50m: {type: int, initialdata: false, default: 0}
            - public_exper_50m: {type: int, initialdata: false, default: 0}
            - public_exper2_50m: {type: int, initialdata: false, default: 0}
            - public_chomage5_50m: {type: int, initialdata: false, default: 0}
            - public_inactive5_50m: {type: int, initialdata: false, default: 0}
            - public_invalide5_50m: {type: int, initialdata: false, default: 0}
            - public_cons_50m: {type: int, initialdata: false, default: 0}
            #           
            - retired_age_50m: {type: int, initialdata: false, default: 0}
            - retired_age2_50m: {type: int, initialdata: false, default: 0}
            - retired_exper_50m: {type: int, initialdata: false, default: 0}
            - retired_exper2_50m: {type: int, initialdata: false, default: 0}
            - retired_chomage5_50m: {type: int, initialdata: false, default: 0}
            - retired_inactive5_50m: {type: int, initialdata: false, default: 0}
            - retired_invalide5_50m: {type: int, initialdata: false, default: 0}
            - retired_cons_50m: {type: int, initialdata: false, default: 0}
            #
            - unemployed_age_50m: {type: int, initialdata: false, default: 0}
            - unemployed_age2_50m: {type: int, initialdata: false, default: 0}
            - unemployed_exper_50m: {type: int, initialdata: false, default: 0}
            - unemployed_exper2_50m: {type: int, initialdata: false, default: 0}
            - unemployed_chomage5_50m: {type: int, initialdata: false, default: 0}
            - unemployed_inactive5_50m: {type: int, initialdata: false, default: 0}
            - unemployed_invalide5_50m: {type: int, initialdata: false, default: 0}
            - unemployed_cons_50m: {type: int, initialdata: false, default: 0}   
            #        
            - inactive_age_50m: {type: int, initialdata: false, default: 0}
            - inactive_age2_50m: {type: int, initialdata: false, default: 0}
            - inactive_exper_50m: {type: int, initialdata: false, default: 0}
            - inactive_exper2_50m: {type: int, initialdata: false, default: 0}
            - inactive_chomage5_50m: {type: int, initialdata: false, default: 0}
            - inactive_inactive5_50m: {type: int, initialdata: false, default: 0}
            - inactive_invalide5_50m: {type: int, initialdata: false, default: 0}
            - inactive_cons_50m: {type: int, initialdata: false, default: 0}
            #
            - private_age_51m: {type: int, initialdata: false, default: 0}
            - private_age2_51m: {type: int, initialdata: false, default: 0}
            - private_exper_51m: {type: int, initialdata: false, default: 0}  
            - private_exper2_51m: {type: int, initialdata: false, default: 0}
            - private_chomage5_51m: {type: int, initialdata: false, default: 0}
            - private_inactive5_51m: {type: int, initialdata: false, default: 0}
            - private_invalide5_51m: {type: int, initialdata: false, default: 0}
            - private_cons_51m: {type: int, initialdata: false, default: 0}
            #
            - public_age_51m: {type: int, initialdata: false, default: 0}
            - public_age2_51m: {type: int, initialdata: false, default: 0}
            - public_exper_51m: {type: int, initialdata: false, default: 0}
            - public_exper2_51m: {type: int, initialdata: false, default: 0}
            - public_chomage5_51m: {type: int, initialdata: false, default: 0}
            - public_inactive5_51m: {type: int, initialdata: false, default: 0}
            - public_invalide5_51m: {type: int, initialdata: false, default: 0}
            - public_cons_51m: {type: int, initialdata: false, default: 0}
            #    
            - retired_age_51m: {type: int, initialdata: false, default: 0}
            - retired_age2_51m: {type: int, initialdata: false, default: 0}
            - retired_exper_51m: {type: int, initialdata: false, default: 0}
            - retired_exper2_51m: {type: int, initialdata: false, default: 0}
            - retired_chomage5_51m: {type: int, initialdata: false, default: 0}
            - retired_inactive5_51m: {type: int, initialdata: false, default: 0}
            - retired_invalide5_51m: {type: int, initialdata: false, default: 0}
            - retired_cons_51m: {type: int, initialdata: false, default: 0}
            #
            - unemployed_age_51m: {type: int, initialdata: false, default: 0}
            - unemployed_age2_51m: {type: int, initialdata: false, default: 0}
            - unemployed_exper_51m: {type: int, initialdata: false, default: 0}
            - unemployed_exper2_51m: {type: int, initialdata: false, default: 0}
            - unemployed_chomage5_51m: {type: int, initialdata: false, default: 0}
            - unemployed_inactive5_51m: {type: int, initialdata: false, default: 0}
            - unemployed_invalide5_51m: {type: int, initialdata: false, default: 0}
            - unemployed_cons_51m: {type: int, initialdata: false, default: 0}   
            #        
            - inactive_age_51m: {type: int, initialdata: false, default: 0}
            - inactive_age2_51m: {type: int, initialdata: false, default: 0}
            - inactive_exper_51m: {type: int, initialdata: false, default: 0}
            - inactive_exper2_51m: {type: int, initialdata: false, default: 0}
            - inactive_chomage5_51m: {type: int, initialdata: false, default: 0}
            - inactive_inactive5_51m: {type: int, initialdata: false, default: 0}
            - inactive_invalide5_51m: {type: int, initialdata: false, default: 0}
            - inactive_cons_51m: {type: int, initialdata: false, default: 0}
            #
            - private_age_50f: {type: int, initialdata: false, default: 0}
            - private_age2_50f: {type: int, initialdata: false, default: 0}
            - private_exper_50f: {type: int, initialdata: false, default: 0}  
            - private_exper2_50f: {type: int, initialdata: false, default: 0}
            - private_chomage5_50f: {type: int, initialdata: false, default: 0}
            - private_inactive5_50f: {type: int, initialdata: false, default: 0}
            - private_invalide5_50f: {type: int, initialdata: false, default: 0}
            - private_cons_50f: {type: int, initialdata: false, default: 0}
            #
            - public_age_50f: {type: int, initialdata: false, default: 0}
            - public_age2_50f: {type: int, initialdata: false, default: 0}
            - public_exper_50f: {type: int, initialdata: false, default: 0}
            - public_exper2_50f: {type: int, initialdata: false, default: 0}
            - public_chomage5_50f: {type: int, initialdata: false, default: 0}
            - public_inactive5_50f: {type: int, initialdata: false, default: 0}
            - public_invalide5_50f: {type: int, initialdata: false, default: 0}
            - public_cons_50f: {type: int, initialdata: false, default: 0}
            #            
            - retired_age_50f: {type: int, initialdata: false, default: 0}
            - retired_age2_50f: {type: int, initialdata: false, default: 0}
            - retired_exper_50f: {type: int, initialdata: false, default: 0}
            - retired_exper2_50f: {type: int, initialdata: false, default: 0}
            - retired_chomage5_50f: {type: int, initialdata: false, default: 0}
            - retired_inactive5_50f: {type: int, initialdata: false, default: 0}
            - retired_invalide5_50f: {type: int, initialdata: false, default: 0}
            - retired_cons_50f: {type: int, initialdata: false, default: 0}
            #
            - unemployed_age_50f: {type: int, initialdata: false, default: 0}
            - unemployed_age2_50f: {type: int, initialdata: false, default: 0}
            - unemployed_exper_50f: {type: int, initialdata: false, default: 0}
            - unemployed_exper2_50f: {type: int, initialdata: false, default: 0}
            - unemployed_chomage5_50f: {type: int, initialdata: false, default: 0}
            - unemployed_inactive5_50f: {type: int, initialdata: false, default: 0}
            - unemployed_invalide5_50f: {type: int, initialdata: false, default: 0}
            - unemployed_cons_50f: {type: int, initialdata: false, default: 0}   
            #        
            - inactive_age_50f: {type: int, initialdata: false, default: 0}
            - inactive_age2_50f: {type: int, initialdata: false, default: 0}
            - inactive_exper_50f: {type: int, initialdata: false, default: 0}
            - inactive_exper2_50f: {type: int, initialdata: false, default: 0}
            - inactive_chomage5_50f: {type: int, initialdata: false, default: 0}
            - inactive_inactive5_50f: {type: int, initialdata: false, default: 0}
            - inactive_invalide5_50f: {type: int, initialdata: false, default: 0}
            - inactive_cons_50f: {type: int, initialdata: false, default: 0}
            #
            - private_age_51f: {type: int, initialdata: false, default: 0}
            - private_age2_51f: {type: int, initialdata: false, default: 0}
            - private_exper_51f: {type: int, initialdata: false, default: 0}  
            - private_exper2_51f: {type: int, initialdata: false, default: 0}
            - private_chomage5_51f: {type: int, initialdata: false, default: 0}
            - private_inactive5_51f: {type: int, initialdata: false, default: 0}
            - private_invalide5_51f: {type: int, initialdata: false, default: 0}
            - private_cons_51f: {type: int, initialdata: false, default: 0}
            #
            - public_age_51f: {type: int, initialdata: false, default: 0}
            - public_age2_51f: {type: int, initialdata: false, default: 0}
            - public_exper_51f: {type: int, initialdata: false, default: 0}
            - public_exper2_51f: {type: int, initialdata: false, default: 0}
            - public_chomage5_51f: {type: int, initialdata: false, default: 0}
            - public_inactive5_51f: {type: int, initialdata: false, default: 0}
            - public_invalide5_51f: {type: int, initialdata: false, default: 0}
            - public_cons_51f: {type: int, initialdata: false, default: 0}
            #          
            - retired_age_51f: {type: int, initialdata: false, default: 0}
            - retired_age2_51f: {type: int, initialdata: false, default: 0}
            - retired_exper_51f: {type: int, initialdata: false, default: 0}
            - retired_exper2_51f: {type: int, initialdata: false, default: 0}
            - retired_chomage5_51f: {type: int, initialdata: false, default: 0}
            - retired_inactive5_51f: {type: int, initialdata: false, default: 0}
            - retired_invalide5_51f: {type: int, initialdata: false, default: 0}
            - retired_cons_51f: {type: int, initialdata: false, default: 0}
            # INVALID is the reference state
            - unemployed_age_51f: {type: int, initialdata: false, default: 0}
            - unemployed_age2_51f: {type: int, initialdata: false, default: 0}
            - unemployed_exper_51f: {type: int, initialdata: false, default: 0}
            - unemployed_exper2_51f: {type: int, initialdata: false, default: 0}
            - unemployed_chomage5_51f: {type: int, initialdata: false, default: 0}
            - unemployed_inactive5_51f: {type: int, initialdata: false, default: 0}
            - unemployed_invalide5_51f: {type: int, initialdata: false, default: 0}
            - unemployed_cons_51f: {type: int, initialdata: false, default: 0}   
            #       
            - inactive_age_51f: {type: int, initialdata: false, default: 0}
            - inactive_age2_51f: {type: int, initialdata: false, default: 0}
            - inactive_exper_51f: {type: int, initialdata: false, default: 0}
            - inactive_exper2_51f: {type: int, initialdata: false, default: 0}
            - inactive_chomage5_51f: {type: int, initialdata: false, default: 0}
            - inactive_inactive5_51f: {type: int, initialdata: false, default: 0}
            - inactive_invalide5_51f: {type: int, initialdata: false, default: 0}
            - inactive_cons_51f: {type: int, initialdata: false, default: 0}

        # patrimoine
            - patrimoine: {type: float, initialdata: false}
        # legislation
            - salsuperbrut: {type: int, initialdata: false, default: 0} 
            - cotsoc_noncontrib: {type: int, initialdata: false} 
            - cotsal_noncontrib: {type: int, initialdata: false} 
            - cotsoc_bar: {type: int, initialdata: false} 
            - cotsoc_lib: {type: int, initialdata: false} 
            - cotpat_contrib: {type: int, initialdata: false} 
            - cotpat_noncontrib: {type: int, initialdata: false} 
            - cotsal_contrib: {type: int, initialdata: false} 
            - cotsal: {type: int, initialdata: false} 
            # - impo: {type: int, initialdata: false} 
            # - psoc: {type: int, initialdata: false} 
            # - mini: {type: int, initialdata: false} 
            # - pfam: {type: int, initialdata: false} 
            # - logt: {type: int, initialdata: false}       
         
        # legislation retraite
            - nb_enf: {type: int, initialdata: false, default: 0}   
            - nb_enf_RG: {type: int, initialdata: false, default: 0}   
            - nb_enf_RSI: {type: int, initialdata: false, default: 0}   
            - nb_enf_FP: {type: int, initialdata: false, default: 0} 
         
        links:
            l_men:      {type: many2one, target: menage, field: men}
            l_foy:      {type: many2one, target: declar, field: foy}
            l_mere:     {type: many2one, target: person, field: mere}  
            l_pere:     {type: many2one, target: person, field: pere}
            l_conj:     {type: many2one, target: person, field: conj}
            l_tuteur:   {type: many2one, target: person, field: tuteur}
            invl_mere:  {type: one2many, target: person, field: mere} 
            invl_pere:  {type: one2many, target: person, field: pere}
            pers2reg:   {type: many2one, target: register, field: id}
            
        # possible transitions and regressions. The actual list used in the
        # simulation must be defined below
            homes:      {type: one2many, target: menage, field: owner}
        
        macros:
            MALE: 0
            FEMALE: 1
            ISMALE: sexe == 0
            ISFEMALE: sexe == 1

            UNSET: -1

            MARRIED: 1 
            SINGLE: 2
            DIVORCED: 3
            WIDOW: 4
            PACS : 5
            
            ISMARRIED: civilstate == 1
            ISSINGLE: civilstate == 2
            ISDIVORCED: civilstate == 3
            ISWIDOW: civilstate == 4
            ISPACS: civilstate == 5
            LEGAL_UNION: civilstate == 1 or civilstate == 5
            LEGAL_CELIB: civilstate == 2 or civilstate == 3 or civilstate == 4
            INCOUPLE: conj > -1
            
            INACTIVE:  1
            UNEMPLOYED: 2
            PRIVATE: 40
            NON_CADRE: 3
            CADRE:     4
            PUBLIC: 50
            FONCT_A:   5
            FONCT_S:   6
            INDEP  :   7           
            AVPF   :   8            
            PRE_RET:   9 
            RETIRED:   10 
            STUDENT:   11
            INVALID: 12
                    
            #ISINWORK:     (workstate == 3) or (workstate == 4) or (workstate == 5)  or (workstate == 6) or (workstate == 7)
            ISINWORK:     (workstate == 3) or (workstate == 4) or (workstate == 5)  or (workstate == 6) or (workstate == 7) or(workstate == 40) or (workstate == 50)  
            WORK_PUBLIC:  (workstate == 5)  or (workstate == 6)
            WORK_PRIVE:   (workstate == 3) or (workstate == 4)
            WORK_INDEP:   (workstate == 7)
            ISUNEMPLOYED: (workstate == 2)
            ISSTUDENT:    (workstate == 11)
            #ISRETIRED:    (workstate == 10)
            ISRETIRED:    (workstate == 10) or (workstate == 9) 
            ISOTHERINACTIVE: (workstate == 1)
            ISINVALID: (workstate == 12)
            ISPRIVATE: (workstate == 40)
            ISPUBLIC: (workstate == 50)

            
            BEGINER: xpr == 1

            #TODO: add others
            ORDINARY_HOUSE: (men>9)
            DASS: 1
            INDASS: (foy==1)
            # IS_LOWER_SECONDARY_EDU: education_level == 2
            # IS_UPPER_SECONDARY_EDU: education_level == 3
            # IS_TERTIARY_EDU: education_level == 4
            # LOWER_SECONDARY_EDU: 2
            # UPPER_SECONDARY_EDU: 3
            # TERTIARY_EDU: 4
            
        processes:   
            init_weight_ind:
                - wprm_init: 1
                - month: randint(0,11)
                - age: trunc(agem/12)
                # - wprm_init: permet de faire des tests
                - wprm_init: 100*age + month
                
            ageing:
                - agem: add_time_scale(agem)
                - age: trunc(agem/12)
                # - wprm_init: permet de faire des tests
                - wprm_init: lag(agem,2)
                
            stat_period_ini:
                - csv('period', 'population', 'naissance', 'sali', 'rsti', 'choi','age moyen',fname='stat.csv')
                - csv('period', 'inwork', 'inpublic', 'inprive', 'independant', 'chomage', 'students',
                        'retired', 'other_inact', fname='workstate.csv')
                - csv('period', 'marie', 'celib', 'divorce', 'voeuf', 'pacs', 'en_couple', fname='civilstate.csv')
            stat_period:               
                - csv(avg(period), count(), count(age==0), sum(sali), sum(rsti), sum(choi), avg(age), fname='stat.csv', mode='a')
                - csv( avg(period), count(ISINWORK), count(WORK_PUBLIC), count(WORK_PRIVE), count(WORK_INDEP),
                       count(ISUNEMPLOYED), count(ISSTUDENT), count(ISRETIRED), count(ISOTHERINACTIVE),
                       fname='workstate.csv', mode='a')
                - csv( avg(period), count(ISMARRIED), count(ISSINGLE), count(ISDIVORCED), count(ISWIDOW),
                       count(ISPACS), count(INCOUPLE), fname='civilstate.csv', mode='a')
                       
            qui_solve: 
                - quimen: if(quimen>1, 2, quimen)
                - quimen: if(quimen==2,  
                                if( id == l_men.get(persons.min(id, quimen==2)),2,3),
                                quimen)
                - quimen: if(quimen==3,  
                                if( id == l_men.get(persons.min(id, quimen==3)),3,4),   
                                quimen)
                - quimen: if(quimen==4,  
                                if( id == l_men.get(persons.min(id, quimen==4)),4,5),
                                quimen)
                - quimen: if(quimen==5,  
                                if( id == l_men.get(persons.min(id, quimen==5)),5,6),
                                quimen)
                - quimen: if(quimen==6,  
                                if( id == l_men.get(persons.min(id, quimen==6)),6,7),
                                quimen)
                - quimen: if(quimen==7,  
                                if( id == l_men.get(persons.min(id, quimen==7)),7,8),
                                quimen)
                - quimen: if(quimen==8,  
                                if( id == l_men.get(persons.min(id, quimen==8)),8,9),
                                quimen)
                - quifoy: if(quifoy>1,2,quifoy)
                - quifoy: if(quifoy==2,  
                                if( id == l_foy.get(on_declar.min(id, quifoy==2)),2,3),
                            quifoy)
                - quifoy: if(quifoy==3,  
                                if( id == l_foy.get(on_declar.min(id, quifoy==3)),3,4),
                            quifoy)   
                - quifoy: if(quifoy==4,  
                                if( id == l_foy.get(on_declar.min(id, quifoy==4)),4,5),
                            quifoy)
                - quifoy: if(quifoy==5,  
                                if( id == l_foy.get(on_declar.min(id, quifoy==5)),5,6),
                            quifoy)
                - quifoy: if(quifoy==6,  
                                if( id == l_foy.get(on_declar.min(id, quifoy==6)),6,7),
                            quifoy)
                - quifoy: if(quifoy==7,  
                                if( id == l_foy.get(on_declar.min(id, quifoy==7)),7,8),
                            quifoy)
                - quifoy: if(quifoy==8,  
                                if( id == l_foy.get(on_declar.min(id, quifoy==8)),8,9),
                            quifoy)             
                            
  