



# LIAM2 information: globals are variables that do not relate to any particular entity defined in the model (they can be used in any entity)
# thus, it can be used to import parameter coefficients 
globals:
    periodic:
        # TODO: il faudrait créer une variable indiquant le chemin
        # Il faut 4 fois ce nombre de coefficients car on a 2 cas (age <= ou > 50)* 2 cas (homme ou femme)
        
        # Ici, les coefficients pour les HOMMES de moins de 50ANS
        ################## Stage 1
        path: param/basemodel/nest1_m.csv
        fields:
            - inwork_age_m: float
            - inwork_age2_m: float
            - inwork_xpr_m: float
            - inwork_xpr2_m: float
            - inwork_chomage5_m: float
            - inwork_invalide5_m: float
            - inwork_inactif5_m: float
            - inwork_afe_m: float
            - inwork_cons_m: float
         # 
        path: param/basemodel/nest1_f.csv
        fields:
            - inwork_age_f: float
            - inwork_age2_f: float
            - inwork_xpr_f: float
            - inwork_xpr2_f: float
            - inwork_chomage5_f: float
            - inwork_invalide5_f: float
            - inwork_inactif5_f: float
            - inwork_afe_f: float
            - inwork_enf_f: float
            - inwork_ageenf_f: float
            - inwork_cons_f: float
         #    

        ################## Stage 2
        path: param/basemodel/nest21_m.csv
        fields:
            - private_age_m: float
            - private_age2_m: float
            - private_xpr_m: float
            - private_xpr2_m: float
            - private_chomage5_m: float
            - private_invalide5_m: float
            - private_inactif5_m: float
            - private_cons_m: float
         #
            - independent_age_m: float
            - independent_age2_m: float
            - independent_xpr_m: float
            - independent_xpr2_m: float
            - independent_chomage5_m: float
            - independent_invalide5_m: float
            - independent_inactif5_m: float
            - independent_cons_m: float
         #
            - public_age_m: float
            - public_age2_m: float
            - public_xpr_m: float
            - public_xpr2_m: float
            - public_chomage5_m: float
            - public_invalide5_m: float
            - public_inactif5_m: float
            - public_cons_m: float
         #
        path: param/basemodel/nest21_f.csv
        fields:
            - private_age_f: float
            - private_age2_f: float
            - private_xpr_f: float
            - private_xpr2_f: float
            - private_chomage5_f: float
            - private_invalide5_f: float
            - private_inactif5_f: float
            - private_enf_f: float
            - private_ageenf_f: float
            - private_cons_f: float
         #    
            - independent_age_f: float
            - independent_age2_f: float
            - independent_xpr_f: float
            - independent_xpr2_f: float
            - independent_chomage5_f: float
            - independent_invalide5_f: float
            - independent_inactif5_f: float
            - independent_enf_f: float
            - independent_ageenf_f: float
            - independent_cons_f: float
         #    
            - public_age_f: float
            - public_age2_f: float
            - public_xpr_f: float
            - public_xpr2_f: float
            - public_chomage5_f: float
            - public_invalide5_f: float
            - public_inactif5_f: float
            - public_enf_f: float
            - public_ageenf_f: float
            - public_cons_f: float
         #    
        path: param/basemodel/nest22_m.csv
        fields:
            - invalid_age_m: float
            - invalid_age2_m: float
            - invalid_xpr_m: float
            - invalid_xpr2_m: float
            - invalid_chomage5_m: float
            - invalid_invalide5_m: float
            - invalid_inactif5_m: float
            - invalid_cons_m: float
         #
            - unemployed_age_m: float
            - unemployed_age2_m: float
            - unemployed_xpr_m: float
            - unemployed_xpr2_m: float
            - unemployed_chomage5_m: float
            - unemployed_invalide5_m: float
            - unemployed_inactif5_m: float
            - unemployed_cons_m: float
         #
            - inactive_age_m: float
            - inactive_age2_m: float
            - inactive_xpr_m: float
            - inactive_xpr2_m: float
            - inactive_chomage5_m: float
            - inactive_invalide5_m: float
            - inactive_inactif5_m: float
            - inactive_cons_m: float
         #
        path: param/basemodel/nest22_f.csv
        fields:
            - invalide_age_f: float
            - invalide_age2_f: float
            - invalide_xpr_f: float
            - invalide_xpr2_f: float
            - invalide_chomage5_f: float
            - invalide_invalide5_f: float
            - invalide_inactif5_f: float
            - invalide_enf_f: float
            - invalide_ageenf_f: float
            - invalide_cons_f: float
         #    
            - unemployed_age_f: float
            - unemployed_age2_f: float
            - unemployed_xpr_f: float
            - unemployed_xpr2_f: float
            - unemployed_chomage5_f: float
            - unemployed_invalide5_f: float
            - unemployed_inactif5_f: float
            - unemployed_enf_f: float
            - unemployed_ageenf_f: float
            - unemployed_cons_f: float
         #    
            - inactive_age_f: float
            - inactive_age2_f: float
            - inactive_xpr_f: float
            - inactive_xpr2_f: float
            - inactive_chomage5_f: float
            - inactive_invalide5_f: float
            - inactive_inactif5_f: float
            - inactive_enf_f: float
            - inactive_ageenf_f: float
            - inactive_cons_f: float
         #  
         ################## Stage 3
        path: param/basemodel/nest31_m.csv
        fields:
            - d_cadre_age_m: float
            - d_cadre_age2_m: float
            - d_cadre_xpr_m: float
            - d_cadre_xpr2_m: float
            - d_cadre_chomage5_m: float
            - d_cadre_invalide5_m: float
            - d_cadre_inactif5_m: float
            - d_cadre_afe_m: float
            - d_cadre_cons_m: float
         # 
        path: param/basemodel/nest31_f.csv
        fields:
            - d_cadre_age_f: float
            - d_cadre_age2_f: float
            - d_cadre_xpr_f: float
            - d_cadre_xpr2_f: float
            - d_cadre_chomage5_f: float
            - d_cadre_invalide5_f: float
            - d_cadre_inactif5_f: float
            - d_cadre_afe_f: float
            - d_cadre_enf_f: float
            - d_cadre_ageenf_f: float
            - d_cadre_cons_f: float
         #    
        path: param/basemodel/nest32_m.csv
        fields:
            - d_actif_age_m: float
            - d_actif_age2_m: float
            - d_actif_xpr_m: float
            - d_actif_xpr2_m: float
            - d_actif_chomage5_m: float
            - d_actif_invalide5_m: float
            - d_actif_inactif5_m: float
            - d_actif_afe_m: float
            - d_actif_cons_m: float
         # 
        path: param/basemodel/nest32_f.csv
        fields:
            - d_actif_age_f: float
            - d_actif_age2_f: float
            - d_actif_xpr_f: float
            - d_actif_xpr2_f: float
            - d_actif_chomage5_f: float
            - d_actif_invalide5_f: float
            - d_actif_inactif5_f: float
            - d_actif_afe_f: float
            - d_actif_enf_f: float
            - d_actif_ageenf_f: float
            - d_actif_cons_f: float
         #
    # periodic permet d'importer les valeurs des taux de chômage qui évoluent d'une année à l'autre (comme par exemple, le taux de chomage)            
    #periodic:
        #path: input/macro.csv
        # PERIOD is an implicit column of the periodic table (You need to put the name "PERIOD" in your table)
        #- unemp_rate: float
entities:
    person:
        processes:
            outwork:
                # TODO!!!!: il faudrait définir tous ces termes dans _person.yml!!!!!
                # UNEMPLOYMENT DURING THE LAST 5 YEARS
                # isunemployed$ signifie l'indicatrice du chômage il y a "$" années
                # Comme on avance dans le temps, isunemployed$ prend la valeur de isunemployed"$-1" et isunemployed1 prend l'état actuel
                - isunemployed5: if(isunemployed4>0,isunemployed4,0)
                - isunemployed4: if(isunemployed3>0,isunemployed3,0)  
                - isunemployed3: if(isunemployed2>0,isunemployed2,0)
                - isunemployed2: if(isunemployed1>0,isunemployed1,0)
                - isunemployed1: if(ISUNEMPLOYED,1,0)
                # durée de chômage pendant les 5 dernières années (i.e. somme des 5 indicatrices précédentes)
                - unempdur5: isunemployed5 + isunemployed4 + isunemployed3 + isunemployed2 + isunemployed1
                # INACTIVITY DURING THE LAST 5 YEARS
                - isinactive5: if(isinactive4>0,isinactive4,0)
                - isinactive4: if(isinactive3>0,isinactive3,0)
                - isinactive3: if(isinactive2>0,isinactive2,0)
                - isinactive2: if(isinactive1>0,isinactive1,0)
                - isinactive1: if(ISOTHERINACTIVE,1,0)
                # durée d'inactivité pendant les 5 dernières années (i.e. somme des 5 indicatrices précédentes)
                - inacdur5: isinactive5 + isinactive4 + isinactive3 + isinactive2 + isinactive1
                # INVALIDITY DURING THE LAST 5 YEARS
                - isinvalid5: if(isinvalid4>0,isinvalid4,0)
                - isinvalid4: if(isinvalid3>0,isinvalid3,0)
                - isinvalid3: if(isinvalid2>0,isinvalid2,0)
                - isinvalid2: if(isinvalid1>0,isinvalid1,0)
                - isinvalid1: if(ISINVALID,1,0)
                # durée d'invalidité pendant les 5 dernières années (i.e. somme des 5 indicatrices précédentes)
                - invaldur5: isinvalid5 + isinvalid4 + isinvalid3 + isinvalid2 + isinvalid1
           # Probability of transition from the reference state
            inwork:
              
                 -  
                 # Estimation is done separately for men and women
                 # denominator of the logit function
                 # README: Un exmeple de "Xbeta" avec private.
                 # On distingue le cas "age>50" ou "age<50"
                 #- denom1_50m: exp(private_age_50m*age + private_age2_50m*age2 + private_exper_50m*xpr + private_exper2_50m*xpr2 + private_chomage5_50m*unempdur5 
                 #              + private_inactif5_50m*inacdur5 + private_invalide5_50m*invaldur5 + private_cons_50m)
                 #- denom2_50m: exp(public_age_50m*age + public_age2_50m*age2 + public_exper_50m*xpr + public_exper2_50m*xpr2 + public_chomage5_50m*unempdur5 
                 #              + public_inactif5_50m*inacdur5 + public_invalide5_50m*invaldur5 + public_cons_50m)
                 #- denom3_50m:
                 #- denom4_50m:
                 #- denom5_50m:
                 #- denom1_50f:
                 #- denom2_50f:
                 #- denom3_50f:
                 #- denom4_50f:
                 #- denom5_50f:
                 #- denom1_51m:
                 #- denom2_51m:
                 #- denom3_51m:
                 #- denom4_51m:
                 #- denom5_51m:
                 #- denom1_51f:
                 #- denom2_51f:
                 #- denom3_51f:
                 #- denom4_51f:
                 #- denom5_51f:
                 #  
                 ################## Stage 1
                 - inwork_prob_m: logistic(inwork_age_m*age + inwork_age2_m*age*age + inwork_xpr_m*xpr + inwork_xpr2_m*xpr*xpr + inwork_chomage5_m*unempdur5
                           + inwork_invalide5_m*invaldur5 + inwork_inactif5_m*inacdur5 + inwork_afe_m*findet + inwork_cons_m)
                 - inwork_prob_m: logistic(inwork_age_m*age + inwork_age2_m*age*age + inwork_xpr_m*xpr + inwork_xpr2_m*xpr*xpr + inwork_chomage5_m*unempdur5
                           + inwork_invalide5_m*invaldur5 + inwork_inactif5_m*inacdur5 + inwork_afe_m*findet + private_enf_f*nb_enf + private_ageenf*age*nb_enf + inwork_cons_m)
                 - inwork_prob: if(ISMALE, inwork_prob_m, inwork_prob_f )

                 ################## Stage 2
                 - denom_m_1: exp(private_age_m*age + private_age2_m*age*age + private_xpr_m*xpr + private_xpr2_m*xpr*xpr + private_chomage5_m*unempdur5
                           + private_invalide5_m*invaldur5 + private_inactif5_m*inacdur5 + private_cons_m)
                 - denom_m_2: exp(public_age_m*age + public_age2_m*age*age + public_xpr_m*xpr + public_xpr2_m*xpr*xpr + public_chomage5_m*unempdur5
                           + public_invalide5_m*invaldur5 + public_inactif5_m*inacdur5 + public_cons_m)
                 - denom_m: 1 + denom_m_1 + denom_m_2
                 #                    
                 - denom_f_1: exp(public_age_f*age + public_age2_f*age*age + public_xpr_f*xpr + public_xpr2_f*xpr*xpr + public_chomage5_f*unempdur5
                           + public_invalide5_f*invaldur5 + public_inactif5_f*inacdur5 + public_enf_f*nb_enf + public_ageenf*age*nb_enf+ public_cons_f)
                 - denom_f_2: exp(private_age_f*age + private_age2_f*age*age + private_xpr_f*xpr + private_xpr2_f*xpr*xpr + private_chomage5_f*unempdur5
                           + private_invalide5_f*invaldur5 + private_inactif5_f*inacdur5 + private_enf_f*nb_enf + private_ageenf*age*nb_enf+ private_cons_f)
                 - denom_f: 1 + denom_f_1 + denom_f_2
                 # 
                 - denom: if(ISMALE, denom_m, denom_f)
                 #
                 - private_prob: if(ISMALE, inwork_prob*denom_m_1/denom, inwork_prob*denom_f_1/denom)
                 - independent_prob: inwork_prob*1/denom
                 - public_prob: if(ISMALE, inwork_prob*denom_m_2/denom, inwork_prob*denom_f_2/denom)
                 #
                 #
                 - denom2_m_1: exp(unemployed_age_m*age + unemployed_age2_m*age*age + unemployed_xpr_m*xpr + unemployed_xpr2_m*xpr*xpr + unemployed_chomage5_m*unempdur5
                           + unemployed_invalide5_m*invaldur5 + unemployed_inactif5_m*inacdur5 + unemployed_cons_m)
                 - denom2_m_2: exp(inactive_age_m*age + inactive_age2_m*age*age + inactive_xpr_m*xpr + inactive_xpr2_m*xpr*xpr + inactive_chomage5_m*unempdur5
                           + inactive_invalide5_m*invaldur5 + inactive_inactif5_m*inacdur5 + inactive_cons_m)
                 - denom2_m: 1 + denom_m_1 + denom_m_2
                 #
                 - denom2_f_1: exp(inactive_age_f*age + inactive_age2_f*age*age + inactive_xpr_f*xpr + inactive_xpr2_f*xpr*xpr + inactive_chomage5_f*unempdur5
                           + inactive_invalide5_f*invaldur5 + inactive_inactif5_f*inacdur5 + inactive_enf_f*nb_enf + inactive_ageenf*age*nb_enf+ inactive_cons_f)
                 - denom2_f_2: exp(unemployed__age_f*age + unemployed__age2_f*age*age + unemployed__xpr_f*xpr + unemployed__xpr2_f*xpr*xpr + unemployed__chomage5_f*unempdur5
                           + unemployed__invalide5_f*invaldur5 + unemployed__inactif5_f*inacdur5 + unemployed__enf_f*nb_enf + unemployed__ageenf*age*nb_enf+ unemployed__cons_f)
                 - denom2_f: 1 + denom_f_1 + denom_f_2
                 - denom2: if(ISMALE, denom2_m, denom2_f)
                 #
                 #
                 - invalid_prob: (1-inwork_prob)*1/denom2
                 - unemployed_prob: if(ISMALE, (1 - inwork_prob)*denom2_m_1/denom2, (1 - inwork_prob)*denom2_m_1/denom2)
                 - inactive_prob: if(ISMALE, (1 - inwork_prob)*denom2_m_2/denom2, (1 - inwork_prob)*denom2_m_2/denom2)
                 ################## Stage 3
                 - cadre_prob:
                 - non_cadre_prob: 1 - cadre_prob
                 - actif_prob:  
                 - seden_prob: 1 - actif_prob
                 
                    
                 
                 - denom_50m_1: exp(private_age_50m*age + private_age2_50m*age*age + private_exper_50m*xpr + private_exper2_50m*xpr*xpr + private_chomage5_50m*unempdur5 
                                   + private_inactif5_50m*inacdur5 + private_invalide5_50m*invaldur5 + private_cons_50m)
                 - denom_50m_2: exp(public_age_50m*age + public_age2_50m*age*age + public_exper_50m*xpr + public_exper2_50m*xpr*xpr + public_chomage5_50m*unempdur5 
                                                  + public_inactif5_50m*inacdur5 + public_invalide5_50m*invaldur5 + public_cons_50m)
                 - denom_50m_3: exp(retired_age_50m*age + retired_age2_50m*age*age + retired_exper_50m*xpr + retired_exper2_50m*xpr*xpr + retired_chomage5_50m*unempdur5 
                                                  + retired_inactif5_50m*inacdur5 + retired_invalide5_50m*invaldur5 + retired_cons_50m)
                 - denom_50m_4: exp(unemployed_age_50m*age + unemployed_age2_50m*age*age + unemployed_exper_50m*xpr + unemployed_exper2_50m*xpr*xpr + unemployed_chomage5_50m*unempdur5 
                                                  + unemployed_inactif5_50m*inacdur5 + unemployed_invalide5_50m*invaldur5 + unemployed_cons_50m)
                 - denom_50m_5: exp(inactive_age_50m*age + inactive_age2_50m*age*age + inactive_exper_50m*xpr + inactive_exper2_50m*xpr*xpr + inactive_chomage5_50m*unempdur5
                                                  + inactive_inactif5_50m*inacdur5 + inactive_invalide5_50m*invaldur5 + inactive_cons_50m)  
                 - denom_50m: 1 + denom_50m_1 + denom_50m_2 + denom_50m_3 + denom_50m_4 + denom_50m_5
                 #
                 - denom_50f_1: exp(private_age_50f*age + private_age2_50f*age*age + private_exper_50f*xpr + private_exper2_50f*xpr*xpr + private_chomage5_50f*unempdur5 
                                                  + private_inactif5_50f*inacdur5 + private_invalide5_50f*invaldur5 + private_cons_50f)
                 - denom_50f_2: exp(public_age_50f*age + public_age2_50f*age*age + public_exper_50f*xpr + public_exper2_50f*xpr*xpr + public_chomage5_50f*unempdur5 
                                                  + public_inactif5_50f*inacdur5 + public_invalide5_50f*invaldur5 + public_cons_50f)
                 - denom_50f_3: exp(retired_age_50f*age + retired_age2_50f*age*age + retired_exper_50f*xpr + retired_exper2_50f*xpr*xpr + retired_chomage5_50f*unempdur5
                                                  + retired_inactif5_50f*inacdur5 + retired_invalide5_50f*invaldur5 + retired_cons_50f)
                 - denom_50f_4: exp(unemployed_age_50f*age + unemployed_age2_50f*age*age + unemployed_exper_50f*xpr + unemployed_exper2_50f*xpr*xpr + unemployed_chomage5_50f*unempdur5
                                                  + unemployed_inactif5_50f*inacdur5 + unemployed_invalide5_50f*invaldur5 + unemployed_cons_50f)
                 - denom_50f_5: exp(inactive_age_50f*age + inactive_age2_50f*age*age + inactive_exper_50f*xpr + inactive_exper2_50f*xpr*xpr + inactive_chomage5_50f*unempdur5
                                                  + inactive_inactif5_50f*inacdur5 + inactive_invalide5_50f*invaldur5 + inactive_cons_50f) 
                 - denom_50f: 1 + denom_50f_1 + denom_50f_2 + denom_50f_3 + denom_50f_4 + denom_50f_5
                 #
                 - denom_51m_1: exp(private_age_51m*age + private_age2_51m*age*age + private_exper_51m*xpr + private_exper2_51m*xpr*xpr + private_chomage5_51m*unempdur5
                                                + private_inactif5_51m*inacdur5 + private_invalide5_51m*invaldur5 + private_cons_51m) 
                 - denom_51m_2: exp(public_age_51m*age + public_age2_51m*age*age + public_exper_51m*xpr + public_exper2_51m*xpr*xpr + public_chomage5_51m*unempdur5
                                                + public_inactif5_51m*inacdur5 + public_invalide5_51m*invaldur5 + public_cons_51m) 
                 - denom_51m_3: exp(retired_age_51m*age + retired_age2_51m*age*age + retired_exper_51m*xpr + retired_exper2_51m*xpr*xpr + retired_chomage5_51m*unempdur5
                                                + retired_inactif5_51m*inacdur5 + retired_invalide5_51m*invaldur5  + retired_cons_51m) 
                 - denom_51m_4: exp(unemployed_age_51m*age + unemployed_age2_51m*age*age + unemployed_exper_51m*xpr + unemployed_exper2_51m*xpr*xpr + unemployed_chomage5_51m*unempdur5 
                                                + unemployed_inactif5_51m*inacdur5 + unemployed_invalide5_51m*invaldur5 + unemployed_cons_51m)  
                 - denom_51m_5: exp(inactive_age_51m*age + inactive_age2_51m*age*age + inactive_exper_51m*xpr + inactive_exper2_51m*xpr*xpr + inactive_chomage5_51m*unempdur5 
                                                + inactive_inactif5_51m*inacdur5 + inactive_invalide5_51m*invaldur5 + inactive_cons_51m)
                 - denom_51m: 1 + denom_51m_1 + denom_51m_2 + denom_51m_3 + denom_51m_4 + denom_51m_5
                 #
                 - denom_51f_1: exp(private_age_51f*age + private_age2_51f*age*age + private_exper_51f*xpr + private_exper2_51f*xpr*xpr + private_chomage5_51f*unempdur5 
                                                + private_inactif5_51m*inacdur5 + private_invalide5_51f*invaldur5 + private_cons_51f) 
                 - denom_51f_2: exp(public_age_51f*age + public_age2_51f*age*age + public_exper_51f*xpr + public_exper2_51f*xpr*xpr + public_chomage5_51f*unempdur5 
                                                + public_inactif5_51f*inacdur5 + public_invalide5_51f*invaldur5 + public_cons_51f)
                 - denom_51f_3: exp(retired_age_51f*age + retired_age2_51f*age*age + retired_exper_51f*xpr + retired_exper2_51f*xpr*xpr + retired_chomage5_51f*unempdur5 
                                                + retired_inactif5_51f*inacdur5 + retired_invalide5_51f*invaldur5 + retired_cons_51f)
                 - denom_51f_4: exp(unemployed_age_51f*age + unemployed_age2_51f*age*age + unemployed_exper_51f*xpr + unemployed_exper2_51f*xpr*xpr + unemployed_chomage5_51f*unempdur5 
                                               + unemployed_inactif5_51f*inacdur5 + unemployed_invalide5_51f*invaldur5 + unemployed_cons_51f)
                 - denom_51f_5: exp(inactive_age_51f*age + inactive_age2_51f*age*age + inactive_exper_51f*xpr + inactive_exper2_51f*xpr*xpr+ inactive_chomage5_51f*unempdur5 
                                                + inactive_inactif5_51f*inacdur5 + inactive_invalide5_51f*invaldur5 + inactive_cons_51f)
                 - denom_51f:  1 + denom_51f_1 + denom_51f_2 + denom_51f_3 + denom_51f_1 + denom_51f_5
                 #
                 - denom: if(age<=50, if(ISMALE, denom_50m, denom_50f), if(ISMALE, denom_51m, denom_51f))
                 #                     
                 # On distingue le cas "age>50" ou "age<50"
                 - invalidity_prob: 1/denom
                 - private_prob: if(age<=50,if(ISMALE,denom_50m_1/denom, denom_50f_1/denom), if(ISMALE,denom_51m_1/denom, denom_51f_1/denom))
                #                                
                 - public_prob: if(age<=50, if(ISMALE,denom_50m_2/denom, denom_50f_2/denom), if(ISMALE,denom_51m_2/denom, denom_51f_2/denom))
                #
                 - retirement_prob: if(age<=50, if(ISMALE,denom_50m_3/denom, denom_50f_3/denom), if(ISMALE,denom_51m_3/denom, denom_51f_3/denom))
                #                                      
                 - unemployment_prob: if(age<=50, if(ISMALE,denom_50m_4/denom, denom_50f_4/denom), if(ISMALE,denom_51m_4/denom, denom_51f_4/denom))
                #                                                                                            
                 - inactivity_prob: if(age<=50, if(ISMALE,denom_50m_5/denom, denom_50f_5/denom), if(ISMALE,denom_51m_5/denom, denom_51f_5/denom))

                
           # DECISION
                # TODO: reprendre les valeurs importées sur le taux de chômage
                 - to_work: align(0.0, filter = ISUNEMPLOYED, proportions=0.05) # unemp_rate est issu de la projection INSEE
                #
                # The assignment is done based on the threshold probability computed above
                # Choice function draws randomly a value from the uniform distribution [0,1] and assigns the agent to the proper state
                 - type_act: if(to_work, choice([PRIVATE, PUBLIC, UNEMPLOYED, INVALID, RETIRED, INACTIVE ],
                             [private_prob, public_prob, unemployment_prob, invalidity_prob, retirement_prob, inactivity_prob]), 0)
           # INDIVIDUAL CHARACTERISTIC (updating)
                 # Nombre d'années d'expérience
                 - xpr: if(ISINWORK,xpr + 1,xpr)
                #- ISUNEMPLOYED: (type_act == UNEMPLOYED)
                #- ISOTHERINACTIVE: (type_act == INACTIVE)
                #- ISRETIRED: (type_act == RETIRED)
