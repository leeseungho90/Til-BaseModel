globals:
    ################## Stage 1
    coefficient1:         # 
        path: param\basemodel\liam.csv
        type: float
    chomageCOR:
        path: param\chomageCOR.csv
        type: float
    # periodic permet d'importer les valeurs des taux de chômage qui évoluent d'une année à l'autre (comme par exemple, le taux de chomage)            
    #periodic:
        #    periodic:         
        #path: input/macro.csv
        # PERIOD is an implicit column of the periodic table (You need to put the name "PERIOD" in your table)
        #- unemp_rate: float
entities:
    person:
        processes:
            outwork:
                # UNEMPLOYMENT DURING THE LAST 5 YEARS
                # isunemployed$ signifie l'indicatrice du chômage il y a "$" années
                # Comme on avance dans le temps, isunemployed$ prend la valeur de isunemployed"$-1" et isunemployed1 prend l'état actuel
                - isunemployed5: if(isunemployed4>0,isunemployed4,0)
                - isunemployed4: if(isunemployed3>0,isunemployed3,0)  
                - isunemployed3: if(isunemployed2>0,isunemployed2,0)
                - isunemployed2: if(isunemployed1>0,isunemployed1,0)
                - isunemployed1: if(ISUNEMPLOYED,1,0)
                # durée de chômage pendant les 5 dernières années (i.e. somme des 5 indicatrices précédentes)
                - unempdur5: isunemployed5 + isunemployed4 + isunemployed3 + isunemployed2 + isunemployed1
                - unempdur5: if(unempdur5 > 0, unempdur5, 0)
                # INACTIVITY DURING THE LAST 5 YEARS
                - isinactive5: if(isinactive4>0,isinactive4,0)
                - isinactive4: if(isinactive3>0,isinactive3,0)
                - isinactive3: if(isinactive2>0,isinactive2,0)
                - isinactive2: if(isinactive1>0,isinactive1,0)
                - isinactive1: if(ISOTHERINACTIVE,1,0)
                # durée d'inactivité pendant les 5 dernières années (i.e. somme des 5 indicatrices précédentes)
                - inacdur5: isinactive5 + isinactive4 + isinactive3 + isinactive2 + isinactive1
                - inacdur5: if(inacdur5 > 0, inacdur5 , 0)                
                # INVALIDITY DURING THE LAST 5 YEARS
                - isinvalid5: if(isinvalid4>0,isinvalid4,0)
                - isinvalid4: if(isinvalid3>0,isinvalid3,0)
                - isinvalid3: if(isinvalid2>0,isinvalid2,0)
                - isinvalid2: if(isinvalid1>0,isinvalid1,0)
                - isinvalid1: if(ISINVALID,1,0)
                # durée d'invalidité pendant les 5 dernières années (i.e. somme des 5 indicatrices précédentes)
                - invaldur5: isinvalid5 + isinvalid4 + isinvalid3 + isinvalid2 + isinvalid1
                - invaldur5: if(invaldur5 > 0, invaldur5 , 0)                
           # Probability of transition from the reference state
                - show("unempdur5", unempdur5, "invaldur5",invaldur5, "inacdur5", inacdur5)
            inwork:
                 # Estimation is done separately for men and women
                 # denominator of the logit function
                 ################## Stage 1
                 - work_score_f: logit_score(coefficient[0,0]*age + coefficient[0,1]*age*age + coefficient[0,2]*xpr + coefficient[0,3]*xpr*xpr 
                                  + coefficient[0,4]*unempdur5 + coefficient[0,5]*invaldur5 + coefficient[0,6]*inacdur5
                                  + coefficient[0,7]*findet + coefficient[0,8]*nb_enf + coefficient[0,9]*age*nb_enf + coefficient[0,10])
                 - work_score_m: logit_score(coefficient[1,0]*age + coefficient[1,1]*age*age + coefficient[1,2]*xpr + coefficient[1,3]*xpr*xpr
                                  + coefficient[1,4]*unempdur5 + coefficient[1,5]*invaldur5 + coefficient[1,6]*inacdur5 + coefficient[1,7]*findet + coefficient[1,8])
                 - work_score: if(ISMALE, inwork_score_m, inwork_score_f )
                 - inactive_score: 1 - inwork_score
                 ################## Stage 2
                 - inwork_score_f: logit_score(coefficient[2,0]*age + coefficient[2,1]*age*age + coefficient[2,2]*xpr + coefficient[2,3]*xpr*xpr 
                                  + coefficient[2,4]*unempdur5 + coefficient[2,5]*invaldur5 + coefficient[2,6]*inacdur5
                                  + coefficient[2,7]*findet + coefficient[2,8]*nb_enf + coefficient[2,9]*age*nb_enf + coefficient[2,10])
                 - inwork_score_m: logit_score(coefficient[3,0]*age + coefficient[3,1]*age*age + coefficient[3,2]*xpr + coefficient[3,3]*xpr*xpr
                                  + coefficient[3,4]*unempdur5 + coefficient[3,5]*invaldur5 + coefficient[3,6]*inacdur5 + coefficient[3,7]*findet + coefficient[3,8])
                 - inwork_score: if(ISMALE, inwork_score_m, inwork_score_f )
                 - outwork_score: 1 - inwork_score                 
                 
                 ################## Stage 3
                 # INVALIDE OU UNEMP
                 - unemp_score_f: logit_score(coefficient[4,0]*age + coefficient[4,1]*age*age + coefficient[4,2]*xpr + coefficient[4,3]*xpr*xpr 
                                  + coefficient[4,4]*unempdur5 + coefficient[4,5]*invaldur5 + coefficient[4,6]*inacdur5
                                  + coefficient[4,7]*findet + coefficient[4,8]*nb_enf + coefficient[4,9]*age*nb_enf + coefficient[4,10])
                 - unemp_score_m: logit_score(coefficient[5,0]*age + coefficient[5,1]*age*age + coefficient[5,2]*xpr + coefficient[5,3]*xpr*xpr
                                  + coefficient[5,4]*unempdur5 + coefficient[5,5]*invaldur5 + coefficient[5,6]*inacdur5 + coefficient[5,7]*findet + coefficient[5,8])
                 - unemp_score: if(ISMALE, unemp_score_m, unemp_score_f )
                 - invalid_score: 1 - unemp_score      
                 # INDEP OU SALARIE
                 - salarie_score_f: logit_score(coefficient[6,0]*age + coefficient[6,1]*age*age + coefficient[6,2]*xpr + coefficient[6,3]*xpr*xpr 
                                  + coefficient[6,4]*unempdur5 + coefficient[6,5]*invaldur5 + coefficient[6,6]*inacdur5
                                  + coefficient[6,7]*findet + coefficient[6,8]*nb_enf + coefficient[6,9]*age*nb_enf + coefficient[6,10])
                 - salarie_score_m: logit_score(coefficient[7,0]*age + coefficient[7,1]*age*age + coefficient[7,2]*xpr + coefficient[7,3]*xpr*xpr
                                  + coefficient[7,4]*unempdur5 + coefficient[7,5]*invaldur5 + coefficient[7,6]*inacdur5 + coefficient[7,7]*findet + coefficient[7,8])
                 - salarie_score: if(ISMALE, salarie_score_m, salarie_score_f )
                 - indep_score: 1 - salarie_score      

                 ################## Stage 4
                 - public_score_f: logit_score(coefficient[8,0]*age + coefficient[8,1]*age*age + coefficient[8,2]*xpr + coefficient[8,3]*xpr*xpr 
                                  + coefficient[8,4]*unempdur5 + coefficient[8,5]*invaldur5 + coefficient[8,6]*inacdur5
                                  + coefficient[8,7]*findet + coefficient[8,8]*nb_enf + coefficient[8,9]*age*nb_enf + coefficient[8,10])
                 - public_score_m: logit_score(coefficient[9,0]*age + coefficient[9,1]*age*age + coefficient[9,2]*xpr + coefficient[9,3]*xpr*xpr
                                  + coefficient[9,4]*unempdur5 + coefficient[9,5]*invaldur5 + coefficient[9,6]*inacdur5 + coefficient[9,7]*findet + coefficient[9,8])
                 - public_score: if(ISMALE, public_score_m, public_score_f )
                 - private_score: 1 - public_score 

                 ################## Stage 5
                 # CADRE OU NON_CADRE
                 - cadre_score_f: logit_score(coefficient[10,0]*age + coefficient[10,1]*age*age + coefficient[10,2]*xpr + coefficient[10,3]*xpr*xpr 
                                  + coefficient[10,4]*unempdur5 + coefficient[10,5]*invaldur5 + coefficient[10,6]*inacdur5
                                  + coefficient[10,7]*findet + coefficient[10,8]*nb_enf + coefficient[10,9]*age*nb_enf + coefficient[10,10])
                 - cadre_score_m: logit_score(coefficient[11,0]*age + coefficient[11,1]*age*age + coefficient[11,2]*xpr + coefficient[11,3]*xpr*xpr
                                  + coefficient[11,4]*unempdur5 + coefficient[11,5]*invaldur5 + coefficient[11,6]*inacdur5 + coefficient[11,7]*findet + coefficient[11,8])
                 - cadre_score: if(ISMALE, cadre_score_m, cadre_score_f )
                 - non_cadre_score: 1 - cadre_score      
                 # ACTIF OU SEDENTAIRE
                 - actif_score_f: logit_score(coefficient[12,0]*age + coefficient[12,1]*age*age + coefficient[12,2]*xpr + coefficient[12,3]*xpr*xpr 
                                  + coefficient[12,4]*unempdur5 + coefficient[12,5]*invaldur5 + coefficient[12,6]*inacdur5
                                  + coefficient[12,7]*findet + coefficient[12,8]*nb_enf + coefficient[12,9]*age*nb_enf + coefficient[12,10])
                 - actif_score_m: logit_score(coefficient[13,0]*age + coefficient[13,1]*age*age + coefficient[13,2]*xpr + coefficient[13,3]*xpr*xpr
                                  + coefficient[13,4]*unempdur5 + coefficient[13,5]*invaldur5 + coefficient[13,6]*inacdur5 + coefficient[13,7]*findet + coefficient[13,8])
                 - actif_score: if(ISMALE, actif_score_m, actif_score_f )
                 - seden_score: 1 - actif_score      


                 ################## Choice
                 ##TODO: à trouver cette base qui permettra de faire un premier tri entre les inactifs et les autres
                - work: if((age > 15) and (age < 54),
                           if(ISMALE,
                              align(work_score,
                                    leave=ISSTUDENT or ISRETIRED,
                                    fname='data\\al_p_work_m.csv'),
                              align(work_score,
                                    leave=ISSTUDENT or ISRETIRED,
                                    fname='data\\al_p_work_f.csv')),
                           False)
                - workstate: if(not work, INACTIVE, IN_WORK)
                          
                 ## level 2 (inwork or invalid or unemployed)
                - work: if((age > 15) and (age < 54),
                           if(ISMALE,
                              align(inwork_score,
                                    leave=ISSTUDENT or ISRETIRED,
                                    fname='data\\al_p_inwork_m.csv'),
                              align(inwork_score,
                                    leave=ISSTUDENT or ISRETIRED,
                                    fname='data\\al_p_inwork_f.csv')),
                           False)
                - ISINWORK: if(work, TRUE, FALSE)
                ## Among the individuals 'not in work', we find the unemployed
                - unemployment: if((age > 15) and (age < 54) and (not ISINWORK),
                           if(ISMALE,
                              align(unemp_score,
                                    leave=ISSTUDENT or ISRETIRED,
                                    fname='data\\al_p_unemployed_m.csv'),
                              align(unemp_score,
                                    leave=ISSTUDENT or ISRETIRED,
                                    fname='data\\al_p_unemployed_f.csv')),
                           False)
                ## Those unemployed ET not INWORK are either the unemployed or the inactive
                - workstate: if((unemployment) and (not ISINWORK), UNEMPLOYED, INVALID)
                
                 ## level 3 (salarié or independent)
                 # TODO: Retrouver les statistiques correspondant aux proportions de travailleurs dans le public ou privé
                 # Pour l'instant, on implémente le modèle avec probabilité










            retire: 
                - workstate: if(age>65, RETIRED, workstate)            